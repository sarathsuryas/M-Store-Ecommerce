<%- include('../ADMIN/ADMINPARTIAL/header') %>

<%- include('../ADMIN/ADMINPARTIAL/middle') %>
<main class="main-wrap">
    <style>
        body {
            padding-top: 60px;
        }

        h1, h2 {
            text-align: center;
        }

        .mt-4 {
            margin-top: 1.5rem;
        }

        .float-right {
            float: right;
        }

        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        th {
            background-color: #f2f2f2;
        }
    </style>
    

    <div class="container">
        <h1 class="mt-4 mb-4">M Store</h1>
        <h2 class="mb-4">Weekly Sales Report</h2>
    
        <button id="printInPdf" class="btn btn-primary float-right mb-2" style="margin-left: 20px">Print Report In Pdf</button>
        <button id="printInExcel" class="btn btn-primary float-right mb-2">Print Report In Excel</button>
    
        <div class="clearfix"></div>
        
        <div class="mt-4">
            <p>Date: <span id="date"><%= formattedDateRange %></span></p>
            <p>Total Orders: <span id="total-orders"><%= totalOrders %></span></p>
            <p>Total Sales: <span id="total-sales">â‚¹<%= totalSales %></span></p>
        </div>
    </div>
    
    
        <table class="table mt-4">
            <thead class="thead-dark">
                <tr>
                    <th>Date</th>
                    <th>Order ID</th>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                </tr>
            </thead>
            <tbody id="sales-data">
                <% 
                    let grandTotalQuantity = 0;
                    let grandTotalPrice = 0;
            
                    weeklySales.forEach(item => { %>  
                        <% item.products.forEach(product => { %>
                            <tr>
                                <td><%= item.date.toLocaleString() %></td>
                                <td><%= item.orderId %></td>  
                                <td><%= product.productId.title %></td>
                                <td><%= product.total %> </td>
                                <td><%= product.quantity %></td>
                            </tr>
            
                            <% 
                                // Accumulate grand total values
                                grandTotalQuantity += product.quantity;
                                grandTotalPrice += product.total;
                            %>
                        <% }) %>
                    <% }) %> 
            
                    <!-- Grand Total Row -->
                    <tr>
                        <td colspan="3">Grand Total</td>
                        <td><%= grandTotalPrice.toFixed(2) %></td>
                        <td><%= grandTotalQuantity %></td>
                    </tr>
            </tbody>
            
        </table>
    </div>
    <!-- print in pdf -->
   <script>
  const printInPdf = document.getElementById('printInPdf');
        const sales = JSON.parse('<%- jsonString %>')

  printInPdf.addEventListener("click", function () {
    fetch('/admin/generate-pdf', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ sales })
    })
    .then(res => {
      if (!res.ok) throw new Error('PDF generation failed');
      return res.blob();
    })
    .then(blob => {
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = 'sales_report.pdf';
      link.click();
    })
    .catch(err => {
      console.error(err);
      alert('Failed to generate PDF');
    });
  });
</script>
    <!-- print in excel -->
    
    
    <script>
        const printInExcel = document.getElementById('printInExcel');
        const salesData = JSON.parse('<%- jsonString %>')
        
        printInExcel.addEventListener("click", function () {
            // Create a new workbook
            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.json_to_sheet(salesData);
    
            // Add the worksheet to the workbook
            XLSX.utils.book_append_sheet(wb, ws, 'SalesData');
    
            // Save the workbook as an Excel file
            XLSX.writeFile(wb, 'sales_data.xlsx');
        });
    </script>
   </main>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js"></script>
        <%- include('../ADMIN/ADMINPARTIAL/footer') %>